# Source: provisioner/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: persistant-local-provisioner
  namespace: default
  labels:
    app.kubernetes.io/instance: persistant-local
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: provisioner
    helm.sh/chart: provisioner-2.5.0
---
# Source: provisioner/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: persistant-local-provisioner-config
  namespace: default
  labels:
    app.kubernetes.io/instance: persistant-local
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: provisioner
    helm.sh/chart: provisioner-2.5.0
data:
  storageClassMap: |
    local-storage:
      hostDir: /mnt/disks
      mountDir: /mnt/disks
      volumeMode: Filesystem
---
# Source: provisioner/templates/storageclass.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
  labels:
    app.kubernetes.io/instance: persistant-local
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: provisioner
    helm.sh/chart: provisioner-2.5.0
provisioner: kubernetes.io/no-provisioner
reclaimPolicy: Delete
volumeBindingMode: WaitForFirstConsumer
---
# Source: provisioner/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: persistant-local-provisioner-node-clusterrole
  labels:
    app.kubernetes.io/instance: persistant-local
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: provisioner
    helm.sh/chart: provisioner-2.5.0
rules:
- resources: [nodes]
  apiGroups: ['']
  verbs: [get]
---
# Source: provisioner/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: persistant-local-provisioner-pv-binding
  labels:
    app.kubernetes.io/instance: persistant-local
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: provisioner
    helm.sh/chart: provisioner-2.5.0
roleRef:
  name: system:persistent-volume-provisioner
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
subjects:
- name: persistant-local-provisioner
  namespace: default
  kind: ServiceAccount
---
# Source: provisioner/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: persistant-local-provisioner-node-binding
  labels:
    app.kubernetes.io/instance: persistant-local
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: provisioner
    helm.sh/chart: provisioner-2.5.0
roleRef:
  name: persistant-local-provisioner-node-clusterrole
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
subjects:
- name: persistant-local-provisioner
  namespace: default
  kind: ServiceAccount
---
# Source: provisioner/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: persistant-local-provisioner
  namespace: default
  labels:
    app.kubernetes.io/instance: persistant-local
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: provisioner
    helm.sh/chart: provisioner-2.5.0
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: persistant-local
      app.kubernetes.io/name: provisioner
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: persistant-local
        app.kubernetes.io/name: provisioner
      annotations:
        checksum/config: 117e1f2df1a58427c3a3c25ebd2a6c46c49c6b9d4f000bd8440d683b032a4b5e
    spec:
      serviceAccountName: persistant-local-provisioner
      nodeSelector:
        localVolume: present
      containers:
      - name: provisioner
        image: k8s.gcr.io/sig-storage/local-volume-provisioner:v2.4.0
        ports:
        - name: metrics
          containerPort: 8080
        env:
        - name: MY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: MY_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: JOB_CONTAINER_IMAGE
          value: k8s.gcr.io/sig-storage/local-volume-provisioner:v2.4.0
        volumeMounts:
        - name: provisioner-config
          readOnly: true
          mountPath: /etc/provisioner/config
        - name: provisioner-dev
          mountPath: /dev
        - name: local-storage
          mountPath: /mnt/disks
          mountPropagation: HostToContainer
        securityContext:
          privileged: true
      volumes:
      - name: provisioner-config
        configMap:
          name: persistant-local-provisioner-config
      - name: provisioner-dev
        hostPath:
          path: /dev
      - name: local-storage
        hostPath:
          path: /mnt/disks
      tolerations:
      - effect: NoExecute
        operator: Exists
      - effect: NoSchedule
        operator: Exists
